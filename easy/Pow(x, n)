ver1:
class Solution {
public:
    double myPow(double x,long long int n) {
        double x1=1;
        double x2 = 1;
        double x3 = 1;
        if(n == 0 || x == 1)
            return 1;
        else if( x == -1)
        {
            if(n%2 == 0)
                return 1;
            else
                return -1;
        }
        else if(n>0)
        {
        for(int i =0; i<n;i++)
        {
            x1 = x1*x;
        }
        return x1;
        }
        else
        {
            x2 = x;
            while(n%2 == 0)
                {
                cout<<"time"<<endl;
                    n = n/2;
                    x2 = x2*x2;
                }
            x3 =x2;
                if(-n == 1)
                {
                    return 1/x2;
                }
            else{
                for(int i = 1;i<-n;i++)
                {
                    x3 = x3*x2;
                    cout<<x2<<endl;
                }
                return 1/x3;
            }
        }
    }
        
};

ver2:

class Solution {
public:
    double myPow(double x,long long int n) {
        if(n < 1)
            return 1/power(x,-n);
        else if(n == 0)
            return 1;
        else
            return power(x,n);
        
    }
    double power(double x, int n)
    {
        if(n == 0)
            return 1;
        double y = power(x,n/2);
        if(n%2 == 0)
            return y*y;
        else
            return y*y*x;

    }
};
