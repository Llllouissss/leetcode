class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        double ans = 0;
        double *box;
        box = new double[nums1.size()+nums2.size()];
        int size = nums1.size() +nums2.size();
        int count = 0;
        
        if(nums1.size() == 0 ||nums2.size() == 0)
        {
            if(nums1.size()>nums2.size())
                if(nums1.size()%2 == 0)
                    return double((nums1[nums1.size()/2]+nums1[nums1.size()/2-1]))/2;
                else
                    return double(nums1[nums1.size()/2]);
            else
                if(nums2.size()%2 == 0)
                    return double((nums2[nums2.size()/2]+nums2[nums2.size()/2-1]))/2;
                else
                    return double(nums2[nums2.size()/2]);
        }
        for(int i = 0;i < nums1.size();i++)
        {
            box[i] = nums1[i];
        }
        for(int i = nums1.size();i<size;i++)
        {
            box[i] = 0;
        }
        if(nums2[0]>nums1[nums1.size()-1])
        {
            int tep = 0;
            for(int i = nums1.size();i<size;i++)
            {
                box[i] = nums2[tep];
                tep++;
            }
        }
        else
        {
        for(int i = 0;i < nums2.size();i++)
        {
            for(int x = 0;x<nums1.size()+count;x++)
            {
                if(nums2[i]>box[x]&&nums2[i]<box[x+1])
                {
                    for(int y = size-1;y > x+1;y--)
                    {
                        box[y] = box[y-1];
                    }
                    box[x+1] = nums2[i];
                    count++;
                    break;
                }
                else if(nums2[i]<box[x])
                {
                    for(int y = size-1;y > x;y--)
                    {
                        box[y] = box[y-1];
                    }
                    box[x] = nums2[i];
                    count++;
                    break;
                }
                else if(nums2[i] == box[x])
                {
                    for(int y = size-1;y > x;y--)
                    {
                        box[y] = box[y-1];
                    }
                    box[x] = nums2[i];
                    count++;
                    break;
                    
                }
                else if(nums2[i]>nums1[nums1.size()-1])
                {
                    box[nums1.size()+count] = nums2[i];
                    count++;
                    break;
                }
                    
            }
        }
        }
        
        if(size%2 == 0 && size != 1)
            ans = (box[size/2]+box[(size/2)-1])/2;
        else if(size%2 == 1)
            ans = box[size/2];
        return ans;
        
    }
};
