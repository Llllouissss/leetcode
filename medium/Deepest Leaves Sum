/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int answer = 0;
    int find_height(TreeNode* root) {
        if(!root)
            return 0;
        int left = find_height(root->left);
        int right = find_height(root->right);
        return 1+max(left,right);
    }
    
    void get_value(TreeNode* root,int height,int num)
    {
        if(!root)
            return;
        if(num == height)
            answer = answer + root->val;
        get_value(root->left,height,num+1);
        get_value(root->right,height,num+1);
    }
    
    int deepestLeavesSum(TreeNode* root)//main
    {
        int max_height = find_height(root);
        get_value(root,max_height,1);
        return answer;
    }
};
